doctype 5
html
  head(lang='en')
    meta(charset='UTF-8')
    title Flask React
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    
    script(src='http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js', type='text/javascript')
    script(src='http://www.skulpt.org/static/skulpt.min.js', type='text/javascript')
    script(src='http://www.skulpt.org/static/skulpt-stdlib.js', type='text/javascript')

    script(src="{{ url_for('static', filename='bower_components/react/react.min.js') }}")
    script(src="{{ url_for('static', filename='bower_components/react/react-dom.min.js') }}")
    script(src='http://cdnjs.cloudflare.com/ajax/libs/react/0.13.3/JSXTransformer.js')
  body
    h3 Try This
      #codeForm
    pre#output.
    // If you want turtle graphics include a canvas
    #mycanvas
    script(type="text/jsx" src="/static/scripts/reactModels.js")
    script(type="text/jsx").
      var CodeForm = window.react.CodeForm;
      ReactDOM.render(
        <CodeForm />,
        document.getElementById('codeForm')
      );

    script(type='text/javascript').
      // output functions are configurable.  This one just appends some text
      // to a pre element.
      function outf(text) {
      var mypre = document.getElementById("output");
      mypre.innerHTML = mypre.innerHTML + text;
      }
      function builtinRead(x) {
      if (Sk.builtinFiles === undefined || Sk.builtinFiles["files"][x] === undefined)
      throw "File not found: '" + x + "'";
      return Sk.builtinFiles["files"][x];
      }
      // Here's everything you need to run a python program in skulpt
      // grab the code from your textarea
      // get a reference to your pre element for output
      // configure the output function
      // call Sk.importMainWithBody()
      function runit() {
      var prog = document.getElementById("yourcode").value;
      var mypre = document.getElementById("output");
      mypre.innerHTML = '';
      Sk.pre = "output";
      Sk.configure({output:outf, read:builtinRead});
      (Sk.TurtleGraphics || (Sk.TurtleGraphics = {})).target = 'mycanvas';
      var myPromise = Sk.misceval.asyncToPromise(function() {
      return Sk.importMainWithBody("<stdin>", false, prog, true);
      });
      myPromise.then(function(mod) {
      console.log('success');
      },
      function(err) {
      console.log(err.toString());
      });
      }